apply from:"gradle/knn.gradle"

def hasDefaults = rootProject.file("gradle.properties").exists()

configure(rootProject) {
    task localSettings() {
        doFirst {
            // If we don't have the defaults yet, create them.
            if (hasDefaults) {
                logger.lifecycle("Local settings already exist, skipping generation.")
            } else {
                def parentDir = rootProject.projectDir.toPath()
                        .resolve("../lucene_candidate").toAbsolutePath().toString()
                rootProject.file("gradle.properties").write("""
# These settings have been generated automatically on the first run.
external.lucene.repo=$parentDir
lucene.version=10.0.0
""", "UTF-8")
                logger.log(LogLevel.WARN, "\nIMPORTANT. This is the first time you ran the build. " +
                        "I wrote some sane defaults (for this machine) to 'gradle.properties', " +
                        "they will be picked up on consecutive gradle invocations (not this one).\n\n")
            }
        }
    }
}

if (hasDefaults == false) {
    // Make all tasks depend on local setup to make sure it'll run.
    allprojects {
        tasks.all { task ->
            if (task != rootProject.localSettings) {
                task.dependsOn rootProject.localSettings
            }
        }
    }
}

allprojects {
    tasks.withType(Exec) {
        doFirst {
            println "cmd: $commandLine"
        }
    }
}